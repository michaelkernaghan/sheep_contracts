{"version":3,"sources":["Timestamp.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z\n\t.number({ description: 'Timestamp' })\n\t.min(1651846877);\n\ntype Input = z.infer<typeof rawSchema>;\n\nexport const { factory, schemas: generatedSchemas } = createType<Input, Input>({\n\tisStringLike: true,\n\trawSchema,\n\tparseErrMsg: (value: unknown) => `${value} is an invalid timestamp`,\n\tunknownErrMsg: `Something went wrong trying to parse a timestamp`,\n});\n\nexport type Timestamp = z.infer<typeof generatedSchemas.schema>;\nexport type t = Timestamp;\nexport const { create, make, of } = factory;\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as Timestamp),\n};\n\nexport const now = () => Date.now() as Timestamp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aACvB,OAAO,EAAE,aAAa,YAAY,CAAC,EACnC,IAAI,UAAU;AAIT,IAAM,EAAE,SAAS,SAAS,iBAAiB,QAAI,YAAAA,SAAyB;AAAA,EAC9E,cAAc;AAAA,EACd;AAAA,EACA,aAAa,CAAC,UAAmB,GAAG;AAAA,EACpC,eAAe;AAChB,CAAC;AAIM,IAAM,EAAE,QAAQ,MAAM,GAAG,IAAI;AAC7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAgB;AAClE;AAEO,IAAM,MAAM,MAAM,KAAK,IAAI;","names":["createType"]}