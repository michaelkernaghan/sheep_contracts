{"version":3,"sources":["Url.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z\n\t.string({ description: 'Url' })\n\t.url();\n\ntype RawInput = z.infer<typeof rawSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, RawInput>({\n\trawSchema,\n\tisStringLike: true,\n\tparseErrMsg: (value: unknown) => `${value} is an invalid url`,\n\tunknownErrMsg: 'Something went wrong trying to parse the url',\n});\n\nexport const toComponents = (url: Url) => {\n\tconst parts = new URL(url.toString());\n\treturn parts;\n};\n\nexport type Url = z.infer<typeof generatedSchemas.schema>;\nexport type t = Url;\nexport const { create, of, make } = factory;\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as Url),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aACvB,OAAO,EAAE,aAAa,MAAM,CAAC,EAC7B,IAAI;AAIC,IAAM,EAAE,SAAS,kBAAkB,QAAQ,QAAI,YAAAA,SAA+B;AAAA,EACpF;AAAA,EACA,cAAc;AAAA,EACd,aAAa,CAAC,UAAmB,GAAG;AAAA,EACpC,eAAe;AAChB,CAAC;AAEM,IAAM,eAAe,CAAC,QAAa;AACzC,QAAM,QAAQ,IAAI,IAAI,IAAI,SAAS,CAAC;AACpC,SAAO;AACR;AAIO,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAC7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAU;AAC5D;","names":["createType"]}