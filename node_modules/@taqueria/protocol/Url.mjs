// Url.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.string({ description: "Url" }).url();
var { schemas: generatedSchemas, factory } = createType({
  rawSchema,
  isStringLike: true,
  parseErrMsg: (value) => `${value} is an invalid url`,
  unknownErrMsg: "Something went wrong trying to parse the url"
});
var toComponents = (url) => {
  const parts = new URL(url.toString());
  return parts;
};
var { create, of, make } = factory;
var schemas = {
  ...generatedSchemas,
  schema: generatedSchemas.schema.transform((val) => val)
};
export {
  create,
  factory,
  generatedSchemas,
  make,
  of,
  rawSchema,
  schemas,
  toComponents
};
//# sourceMappingURL=Url.mjs.map