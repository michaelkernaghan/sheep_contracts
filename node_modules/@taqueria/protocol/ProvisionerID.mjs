// ProvisionerID.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.string().min(1).regex(/^[A-Za-z0-9]+[A-Za-z0-9-_]+\.[A-Za-z0-9]+[A-Za-z0-9-_]+\.[A-Za-z0-9]+[A-Za-z0-9-_]+$/).describe("Provisioner ID");
var { schemas: generatedSchemas, factory } = createType({
  rawSchema,
  parseErrMsg: (value) => `${value} is not a valid provisioner ID`,
  unknownErrMsg: "Something went wrong trying to parse the provision ID"
});
var { create, of, make } = factory;
var schemas = {
  ...generatedSchemas,
  schema: generatedSchemas.schema.transform((val) => val)
};
export {
  create,
  factory,
  generatedSchemas,
  make,
  of,
  rawSchema,
  schemas
};
//# sourceMappingURL=ProvisionerID.mjs.map