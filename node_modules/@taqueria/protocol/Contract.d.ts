import { z } from 'zod';
export declare const rawSchema: z.ZodObject<{
    sourceFile: z.ZodString;
    hash: z.ZodString;
}, "strip", z.ZodTypeAny, {
    sourceFile: string;
    hash: string;
}, {
    sourceFile: string;
    hash: string;
}>;
export declare const internalSchema: z.ZodObject<{
    sourceFile: z.ZodString;
    hash: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, string & {
        readonly __kind: any;
    }, any>, string & {
        readonly __kind: any;
    }, any>;
}, "strip", z.ZodTypeAny, {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
}, {
    hash?: any;
    sourceFile: string;
}>;
export declare type Contract = z.infer<typeof internalSchema>;
export declare type t = Contract;
export declare const create: (input: {
    sourceFile: string;
    hash: string;
} | {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
}) => {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}, of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>, make: (input: {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    sourceFile: string;
    hash: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>;
export declare const schemas: {
    schema: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        sourceFile: string;
        hash: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, {
        sourceFile: string;
        hash: string & {
            readonly __kind: any;
        };
    }, any>;
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
};
//# sourceMappingURL=Contract.d.ts.map