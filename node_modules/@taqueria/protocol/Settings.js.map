{"version":3,"sources":["Settings.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z.object({\n\tconsent: z.union(\n\t\t[z.literal('opt_in'), z.literal('opt_out')],\n\t\t{ description: 'Consent' },\n\t),\n}).describe('Setting');\n\ntype RawInput = z.infer<typeof rawSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, RawInput>({\n\trawSchema,\n\tparseErrMsg: (value: unknown) => `${value} is not a valid settings type`,\n\tunknownErrMsg: 'Something went wrong when parsing the settings file',\n});\n\nexport type Settings = z.infer<typeof generatedSchemas.schema>;\nexport type t = Settings;\n\nexport const { create, of, make } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as Settings),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aAAE,OAAO;AAAA,EACjC,SAAS,aAAE;AAAA,IACV,CAAC,aAAE,QAAQ,QAAQ,GAAG,aAAE,QAAQ,SAAS,CAAC;AAAA,IAC1C,EAAE,aAAa,UAAU;AAAA,EAC1B;AACD,CAAC,EAAE,SAAS,SAAS;AAId,IAAM,EAAE,SAAS,kBAAkB,QAAQ,QAAI,YAAAA,SAA+B;AAAA,EACpF;AAAA,EACA,aAAa,CAAC,UAAmB,GAAG;AAAA,EACpC,eAAe;AAChB,CAAC;AAKM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAE7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAe;AACjE;","names":["createType"]}