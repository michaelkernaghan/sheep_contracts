import { z } from 'zod';
export declare const rawSchema: z.ZodObject<{
    label: z.ZodString;
    rpcUrl: z.ZodString;
    protocol: z.ZodString;
    attributes: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>>>;
    plugin: z.ZodOptional<z.ZodString>;
    accounts: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        default: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        default: string;
    }, {
        default: string;
    }>, z.ZodRecord<z.ZodString, z.ZodObject<{
        encryptedKey: z.ZodString;
        publicKeyHash: z.ZodString;
        secretKey: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        encryptedKey: string;
        publicKeyHash: string;
        secretKey: string;
    }, {
        encryptedKey: string;
        publicKeyHash: string;
        secretKey: string;
    }>>]>>;
    tzkt: z.ZodOptional<z.ZodObject<{
        disableAutostartWithSandbox: z.ZodDefault<z.ZodBoolean>;
        postgresqlPort: z.ZodDefault<z.ZodNumber>;
        apiPort: z.ZodDefault<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    }, {
        disableAutostartWithSandbox?: boolean | undefined;
        postgresqlPort?: number | undefined;
        apiPort?: number | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    accounts?: {
        default: string;
    } | Record<string, {
        encryptedKey: string;
        publicKeyHash: string;
        secretKey: string;
    }> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: string | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string;
    rpcUrl: string;
    protocol: string;
}, {
    accounts?: {
        default: string;
    } | Record<string, {
        encryptedKey: string;
        publicKeyHash: string;
        secretKey: string;
    }> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: string | undefined;
    tzkt?: {
        disableAutostartWithSandbox?: boolean | undefined;
        postgresqlPort?: number | undefined;
        apiPort?: number | undefined;
    } | undefined;
    label: string;
    rpcUrl: string;
    protocol: string;
}>;
export declare const generatedSchemas: {
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
    schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>;
}, factory: {
    make: (input: {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }>;
    of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }>;
    create: (input: {
        accounts?: {
            default: string;
        } | Record<string, {
            encryptedKey: string;
            publicKeyHash: string;
            secretKey: string;
        }> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: string | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string;
        rpcUrl: string;
        protocol: string;
    } | {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    }) => {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    };
    from: (input: unknown) => {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    };
};
export declare type SandboxConfig = z.infer<typeof generatedSchemas.schema>;
export declare type t = SandboxConfig;
export declare const create: (input: {
    accounts?: {
        default: string;
    } | Record<string, {
        encryptedKey: string;
        publicKeyHash: string;
        secretKey: string;
    }> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: string | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string;
    rpcUrl: string;
    protocol: string;
} | {
    accounts?: Record<string, string | ({
        encryptedKey: string;
        publicKeyHash: string & {
            readonly __kind: any;
        };
        secretKey: string;
    } & {
        readonly __kind: any;
    })> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: (string & {
        readonly __kind: any;
    }) | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string & {
        readonly __kind: any;
    };
    rpcUrl: string & {
        readonly __kind: any;
    };
    protocol: string & {
        readonly __kind: any;
    };
}) => {
    accounts?: Record<string, string | ({
        encryptedKey: string;
        publicKeyHash: string & {
            readonly __kind: any;
        };
        secretKey: string;
    } & {
        readonly __kind: any;
    })> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: (string & {
        readonly __kind: any;
    }) | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string & {
        readonly __kind: any;
    };
    rpcUrl: string & {
        readonly __kind: any;
    };
    protocol: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}, of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    accounts?: Record<string, string | ({
        encryptedKey: string;
        publicKeyHash: string & {
            readonly __kind: any;
        };
        secretKey: string;
    } & {
        readonly __kind: any;
    })> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: (string & {
        readonly __kind: any;
    }) | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string & {
        readonly __kind: any;
    };
    rpcUrl: string & {
        readonly __kind: any;
    };
    protocol: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>, make: (input: {
    accounts?: Record<string, string | ({
        encryptedKey: string;
        publicKeyHash: string & {
            readonly __kind: any;
        };
        secretKey: string;
    } & {
        readonly __kind: any;
    })> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: (string & {
        readonly __kind: any;
    }) | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string & {
        readonly __kind: any;
    };
    rpcUrl: string & {
        readonly __kind: any;
    };
    protocol: string & {
        readonly __kind: any;
    };
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    accounts?: Record<string, string | ({
        encryptedKey: string;
        publicKeyHash: string & {
            readonly __kind: any;
        };
        secretKey: string;
    } & {
        readonly __kind: any;
    })> | undefined;
    attributes?: Record<string, string | number | boolean> | undefined;
    plugin?: (string & {
        readonly __kind: any;
    }) | undefined;
    tzkt?: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } | undefined;
    label: string & {
        readonly __kind: any;
    };
    rpcUrl: string & {
        readonly __kind: any;
    };
    protocol: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>;
export declare const schemas: {
    schema: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, {
        accounts?: Record<string, string | ({
            encryptedKey: string;
            publicKeyHash: string & {
                readonly __kind: any;
            };
            secretKey: string;
        } & {
            readonly __kind: any;
        })> | undefined;
        attributes?: Record<string, string | number | boolean> | undefined;
        plugin?: (string & {
            readonly __kind: any;
        }) | undefined;
        tzkt?: {
            disableAutostartWithSandbox: boolean;
            postgresqlPort: number;
            apiPort: number;
        } | undefined;
        label: string & {
            readonly __kind: any;
        };
        rpcUrl: string & {
            readonly __kind: any;
        };
        protocol: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>;
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
};
//# sourceMappingURL=SandboxConfig.d.ts.map