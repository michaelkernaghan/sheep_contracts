// PluginResponseEncoding.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.preprocess(
  (val) => val ?? "none",
  z.union([
    z.literal("json"),
    z.literal("application/json"),
    z.literal("none")
  ]).default("none").optional()
);
var { schemas, factory } = createType({
  rawSchema,
  internalSchema: rawSchema,
  parseErrMsg: (value) => `The following encoding is invalid: ${value}`,
  unknownErrMsg: "Something went wrong trying to parse the encoding"
});
var { create, of, make } = factory;
export {
  create,
  factory,
  make,
  of,
  rawSchema,
  schemas
};
//# sourceMappingURL=PluginResponseEncoding.mjs.map