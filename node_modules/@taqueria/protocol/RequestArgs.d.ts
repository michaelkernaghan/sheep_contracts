import { z } from 'zod';
export declare const generatedSchemas: {
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
    schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>;
}, factory: {
    make: (input: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }>;
    of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }>;
    create: (input: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: {
            accounts?: Record<string, string | number> | undefined;
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string;
            }> | undefined;
            network?: Record<string, {
                accounts?: Record<string, any> | undefined;
                faucet?: {
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string;
                } | undefined;
                label: string;
                rpcUrl: string;
                protocol: string;
            }> | undefined;
            sandbox?: Record<string, {
                accounts?: {
                    default: string;
                } | Record<string, {
                    encryptedKey: string;
                    publicKeyHash: string;
                    secretKey: string;
                }> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: string | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string;
                rpcUrl: string;
                protocol: string;
            }> | undefined;
            environment?: Record<string, string | {
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            }> | undefined;
            metadata?: {
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } | undefined;
            hash: string;
            plugins: {
                type: "npm" | "binary" | "deno";
                name: string;
            }[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string;
            configFile: string;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } | {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    }) => {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    };
    from: (input: unknown) => {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    };
};
export declare type RequestArgs = z.infer<typeof generatedSchemas.schema>;
export declare type t = RequestArgs;
export declare const schemas: {
    schema: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>;
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
};
export declare const proxy: {
    schemas: {
        rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
        internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
        schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }, any>;
    };
    factory: {
        make: (input: {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>;
        of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>;
        create: (input: {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } | {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        }) => {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        };
        from: (input: unknown) => {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            task: string;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        };
    };
};
export declare const proxyTemplate: {
    schemas: {
        rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
        internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
        schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }, any>;
    };
    factory: {
        make: (input: {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>;
        of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>;
        create: (input: {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } | {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        }) => {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        };
        from: (input: unknown) => {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: {
                accounts?: Record<string, string | number> | undefined;
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string;
                }> | undefined;
                network?: Record<string, {
                    accounts?: Record<string, any> | undefined;
                    faucet?: {
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                sandbox?: Record<string, {
                    accounts?: {
                        default: string;
                    } | Record<string, {
                        encryptedKey: string;
                        publicKeyHash: string;
                        secretKey: string;
                    }> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: string | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string;
                    rpcUrl: string;
                    protocol: string;
                }> | undefined;
                environment?: Record<string, string | {
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                }> | undefined;
                metadata?: {
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } | undefined;
                hash: string;
                plugins: {
                    type: "npm" | "binary" | "deno";
                    name: string;
                }[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string;
                configFile: string;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            template: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        };
    };
};
export declare const proxySchemas: {
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
    schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>;
};
export declare const proxyFactory: {
    make: (input: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }>;
    of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }>;
    create: (input: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: {
            accounts?: Record<string, string | number> | undefined;
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string;
            }> | undefined;
            network?: Record<string, {
                accounts?: Record<string, any> | undefined;
                faucet?: {
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string;
                } | undefined;
                label: string;
                rpcUrl: string;
                protocol: string;
            }> | undefined;
            sandbox?: Record<string, {
                accounts?: {
                    default: string;
                } | Record<string, {
                    encryptedKey: string;
                    publicKeyHash: string;
                    secretKey: string;
                }> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: string | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string;
                rpcUrl: string;
                protocol: string;
            }> | undefined;
            environment?: Record<string, string | {
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            }> | undefined;
            metadata?: {
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } | undefined;
            hash: string;
            plugins: {
                type: "npm" | "binary" | "deno";
                name: string;
            }[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string;
            configFile: string;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } | {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    }) => {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    };
    from: (input: unknown) => {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    };
};
export declare type ProxyRequestArgs = z.infer<typeof proxySchemas.schema>;
export declare type ProxyTemplateRequestArgs = z.infer<typeof proxyTemplate.schemas.schema>;
export declare const createProxyRequestArgs: (input: unknown) => {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    task: string;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
};
export declare const makeProxyRequestArgs: (input: {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    task: string;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    task: string;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>;
export declare const ofProxyRequestArgs: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    task: string;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>;
export declare const createProxyTemplateRequestArgs: (input: unknown) => {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: {
        accounts?: Record<string, string | number> | undefined;
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        network?: Record<string, {
            accounts?: Record<string, any> | undefined;
            faucet?: {
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        sandbox?: Record<string, {
            accounts?: {
                default: string;
            } | Record<string, {
                encryptedKey: string;
                publicKeyHash: string;
                secretKey: string;
            }> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: string | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        environment?: Record<string, string | {
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        }> | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        hash: string;
        plugins: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string;
        configFile: string;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    template: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
};
export declare const makeProxyTemplateRequestArgs: (input: {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: {
        accounts?: Record<string, string | number> | undefined;
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        network?: Record<string, {
            accounts?: Record<string, any> | undefined;
            faucet?: {
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        sandbox?: Record<string, {
            accounts?: {
                default: string;
            } | Record<string, {
                encryptedKey: string;
                publicKeyHash: string;
                secretKey: string;
            }> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: string | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        environment?: Record<string, string | {
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        }> | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        hash: string;
        plugins: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string;
        configFile: string;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    template: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: {
        accounts?: Record<string, string | number> | undefined;
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        network?: Record<string, {
            accounts?: Record<string, any> | undefined;
            faucet?: {
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        sandbox?: Record<string, {
            accounts?: {
                default: string;
            } | Record<string, {
                encryptedKey: string;
                publicKeyHash: string;
                secretKey: string;
            }> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: string | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        environment?: Record<string, string | {
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        }> | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        hash: string;
        plugins: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string;
        configFile: string;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    template: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>;
export declare const ofProxyTemplateRequestArgs: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: {
        accounts?: Record<string, string | number> | undefined;
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        network?: Record<string, {
            accounts?: Record<string, any> | undefined;
            faucet?: {
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        sandbox?: Record<string, {
            accounts?: {
                default: string;
            } | Record<string, {
                encryptedKey: string;
                publicKeyHash: string;
                secretKey: string;
            }> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: string | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        environment?: Record<string, string | {
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        }> | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        hash: string;
        plugins: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string;
        configFile: string;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    template: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>;
export declare const create: (input: {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: {
        accounts?: Record<string, string | number> | undefined;
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        network?: Record<string, {
            accounts?: Record<string, any> | undefined;
            faucet?: {
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        sandbox?: Record<string, {
            accounts?: {
                default: string;
            } | Record<string, {
                encryptedKey: string;
                publicKeyHash: string;
                secretKey: string;
            }> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: string | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string;
            rpcUrl: string;
            protocol: string;
        }> | undefined;
        environment?: Record<string, string | {
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        }> | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        hash: string;
        plugins: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string;
        configFile: string;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} | {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
}) => {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}, make: (input: {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>, of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
}>, from: (input: unknown) => {
    plugin?: string | undefined;
    version?: boolean | undefined;
    build?: boolean | undefined;
    help?: boolean | undefined;
    yes?: boolean | undefined;
    quickstart?: string | undefined;
    pluginName?: string | undefined;
    config: import("@taqueria/protocol/Base").Flatten<{
        language?: "en" | "fr" | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string & {
                readonly __kind: any;
            };
        }> | undefined;
        network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
            accounts?: Record<string, any> | undefined;
            faucet?: import("@taqueria/protocol/Base").Flatten<{
                email?: string | undefined;
                password?: string | undefined;
                amount?: string | undefined;
                activation_code?: string | undefined;
                mnemonic: string[];
                pkh: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>> | undefined;
        sandbox?: Record<string, {
            accounts?: Record<string, string | ({
                encryptedKey: string;
                publicKeyHash: string & {
                    readonly __kind: any;
                };
                secretKey: string;
            } & {
                readonly __kind: any;
            })> | undefined;
            attributes?: Record<string, string | number | boolean> | undefined;
            plugin?: (string & {
                readonly __kind: any;
            }) | undefined;
            tzkt?: {
                disableAutostartWithSandbox: boolean;
                postgresqlPort: number;
                apiPort: number;
            } | undefined;
            label: string & {
                readonly __kind: any;
            };
            rpcUrl: string & {
                readonly __kind: any;
            };
            protocol: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }> | undefined;
        environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
            storage?: Record<string, any> | undefined;
            aliases?: Record<string, any> | undefined;
            networks: string[];
            sandboxes: string[];
        } & {
            readonly __kind: any;
        }>> | undefined;
        metadata?: ({
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } & {
            readonly __kind: any;
        }) | undefined;
        hash: string & {
            readonly __kind: any;
        };
        accounts: Record<string, string | number>;
        plugins: ({
            type: "npm" | "binary" | "deno";
            name: string;
        } & {
            readonly __kind: any;
        })[];
        contractsDir: string;
        artifactsDir: string;
        projectDir: string & {
            readonly __kind: any;
        };
        configFile: string & {
            readonly __kind: any;
        };
    }> & {
        readonly __kind: any;
    };
    debug: boolean;
    fromVsCode: boolean;
    projectDir: string & {
        readonly __kind: any;
    };
    _: (string | number)[];
    maxConcurrency: number;
    disableState: boolean;
    logPluginRequests: boolean;
    env: string;
    setBuild: string;
    setVersion: string;
    taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
} & {
    readonly __kind: any;
};
//# sourceMappingURL=RequestArgs.d.ts.map