// SanitizedPath.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.string({ description: "Sanitized Path" }).transform((value) => {
  const result = value.match(/^(\.\.|\.\/|\/)/);
  return result ? value : `./${value}`;
});
var { schemas: generatedSchemas, factory } = createType({
  isStringLike: true,
  rawSchema,
  parseErrMsg: (value) => `${value} is an invalid filesystem path`,
  unknownErrMsg: (value) => `Something went wrong trying to parse the filesystem path, ${value}`
});
var internalSchema = generatedSchemas.schema;
var { create, of, make } = factory;
var schemas = {
  ...generatedSchemas,
  schema: generatedSchemas.schema.transform((val) => val)
};
export {
  create,
  internalSchema,
  make,
  of,
  rawSchema,
  schemas
};
//# sourceMappingURL=SanitizedPath.mjs.map