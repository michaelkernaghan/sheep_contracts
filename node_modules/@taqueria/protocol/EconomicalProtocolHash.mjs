// EconomicalProtocolHash.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.string({ description: "Protocol hash" }).refine(
  (value) => value.length === 51 && value[0] === "P" && /[A-Za-z0-9]+/.test(value),
  (value) => ({ message: `${value} is an invalid hash for an economical protocol` })
);
var { schemas: generatedSchemas, factory } = createType({
  rawSchema,
  parseErrMsg: (value) => `${value} is an invalid economical protocol hash`,
  unknownErrMsg: "Somethign went wrong trying to parse the economical protocol hash"
});
var { create, of, make } = factory;
var schemas = {
  ...generatedSchemas,
  schema: generatedSchemas.schema.transform((val) => val)
};
export {
  create,
  factory,
  generatedSchemas,
  make,
  of,
  rawSchema,
  schemas
};
//# sourceMappingURL=EconomicalProtocolHash.mjs.map