{"version":3,"sources":["ParsedOperation.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport * as Operation from '@taqueria/protocol/Operation';\nimport { z } from 'zod';\n\nconst internalSchema = Operation\n\t.internalSchema\n\t.describe('ParsedOperation')\n\t.omit({ handler: true });\n\nexport const rawSchema = Operation\n\t.rawSchema\n\t.omit({ handler: true })\n\t.describe('ParsedOperation');\n\ntype RawInput = z.infer<typeof rawSchema>;\ntype Input = z.infer<typeof internalSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, Input>({\n\trawSchema,\n\tinternalSchema,\n\tparseErrMsg: (value: unknown) => `Could not parse the following operation: ${value}`,\n\tunknownErrMsg: 'Something went wrong trying to parse an operation',\n});\n\nexport type ParsedOperation = z.infer<typeof generatedSchemas.schema>;\nexport type t = ParsedOperation;\n\nexport const { create, make, of } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as ParsedOperation),\n};\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,YAAY,eAAe;AAG3B,IAAMA,kBACJ,yBACA,SAAS,iBAAiB,EAC1B,KAAK,EAAE,SAAS,KAAK,CAAC;AAEjB,IAAMC,aACX,oBACA,KAAK,EAAE,SAAS,KAAK,CAAC,EACtB,SAAS,iBAAiB;AAKrB,IAAM,EAAE,SAAS,kBAAkB,QAAQ,IAAI,WAA4B;AAAA,EACjF,WAAAA;AAAA,EACA,gBAAAD;AAAA,EACA,aAAa,CAAC,UAAmB,4CAA4C;AAAA,EAC7E,eAAe;AAChB,CAAC;AAKM,IAAM,EAAE,QAAQ,MAAM,GAAG,IAAI;AAE7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAsB;AACxE;","names":["internalSchema","rawSchema"]}