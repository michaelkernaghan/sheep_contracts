// HumanReadableIdentifier.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.string({ description: "Human Readable Identifier" }).regex(/^[A-Za-z]+[A-Za-z0-9-_ ]*$/, "Must be a valid human-readable identifier");
var { schemas: generatedSchemas, factory } = createType({
  isStringLike: true,
  rawSchema,
  parseErrMsg: (value) => `${value} is not a valid human-readable identifier`,
  unknownErrMsg: "Something went wrong trying to parse the human readable identifier"
});
var internalSchema = generatedSchemas.schema;
var { create, of, make } = factory;
var schemas = {
  ...generatedSchemas,
  schema: generatedSchemas.schema.transform((val) => val)
};
export {
  create,
  internalSchema,
  make,
  of,
  rawSchema,
  schemas
};
//# sourceMappingURL=HumanReadableIdentifier.mjs.map