{"version":3,"sources":["InstalledPlugin.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z.object({\n\tname: z.string({ description: 'Plugin Name' }).min(1),\n\ttype: z.union(\n\t\t[z.literal('npm'), z.literal('binary'), z.literal('deno')],\n\t\t{ description: 'Plugin Type' },\n\t),\n}).describe('InstalledPlugin');\n\ntype RawInput = z.infer<typeof rawSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, RawInput>({\n\trawSchema,\n\tparseErrMsg: (value: unknown) => `${value} is not a valid installed plugin`,\n\tunknownErrMsg: 'Something went wrong when parsing the installed plugin',\n});\n\nexport type InstalledPlugin = z.infer<typeof generatedSchemas.schema>;\nexport type t = InstalledPlugin;\n\nexport const { create, of, make } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as InstalledPlugin),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aAAE,OAAO;AAAA,EACjC,MAAM,aAAE,OAAO,EAAE,aAAa,cAAc,CAAC,EAAE,IAAI,CAAC;AAAA,EACpD,MAAM,aAAE;AAAA,IACP,CAAC,aAAE,QAAQ,KAAK,GAAG,aAAE,QAAQ,QAAQ,GAAG,aAAE,QAAQ,MAAM,CAAC;AAAA,IACzD,EAAE,aAAa,cAAc;AAAA,EAC9B;AACD,CAAC,EAAE,SAAS,iBAAiB;AAItB,IAAM,EAAE,SAAS,kBAAkB,QAAQ,QAAI,YAAAA,SAA+B;AAAA,EACpF;AAAA,EACA,aAAa,CAAC,UAAmB,GAAG;AAAA,EACpC,eAAe;AAChB,CAAC;AAKM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAE7B,IAAM,UAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAAsB;AACxE;","names":["createType"]}