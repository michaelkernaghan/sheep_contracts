// PluginProxyResponse.ts
import createType from "@taqueria/protocol/Base";
import * as PluginJsonResponse from "@taqueria/protocol/PluginJsonResponse";
import { z } from "zod";
var internalSchema = z.union([
  PluginJsonResponse.schemas.internalSchema,
  z.void()
]);
var rawSchema = internalSchema;
var { schemas: schemas2, factory } = createType({
  rawSchema,
  internalSchema,
  parseErrMsg: "The response from the proxy request is invalid",
  unknownErrMsg: "Something went wrong parsing the proxy response from the plugin"
});
var { of, make, create } = factory;
export {
  create,
  factory,
  make,
  of,
  rawSchema,
  schemas2 as schemas
};
//# sourceMappingURL=PluginProxyResponse.mjs.map