// PluginJsonResponse.ts
import createType from "@taqueria/protocol/Base";
import { z } from "zod";
var rawSchema = z.object({
  data: z.unknown().optional(),
  render: z.union([
    z.literal("none"),
    z.literal("table"),
    z.literal("string")
  ]).optional()
});
var pluginJsonResponse = createType({
  rawSchema,
  internalSchema: rawSchema,
  parseErrMsg: (value) => `The following JSON response is invalid: ${value}`,
  unknownErrMsg: "Something went wrong trying to parse the template"
});
var { schemas, factory } = pluginJsonResponse;
export {
  factory,
  pluginJsonResponse,
  rawSchema,
  schemas
};
//# sourceMappingURL=PluginJsonResponse.mjs.map