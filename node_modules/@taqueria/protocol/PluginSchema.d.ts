import { z } from 'zod';
export declare const rawSchema: z.ZodObject<z.extendShape<{
    name: z.ZodString;
    version: z.ZodString;
    schema: z.ZodString;
    alias: z.ZodUnion<[z.ZodString, z.ZodString]>;
    tasks: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    }, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    }, any>, "many">, ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[], unknown>>;
    operations: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, "many">, ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    })[], unknown>>;
    templates: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
        encoding: ("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
        encoding: ("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, "many">, ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
        encoding: ("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    })[], unknown>>;
}, {
    name: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodString]>>;
    operations: z.ZodOptional<z.ZodEffects<z.ZodArray<z.ZodObject<{
        operation: z.ZodString;
        command: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        positionals: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodObject<{
            placeholder: z.ZodString;
            description: z.ZodString;
            defaultValue: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>>;
            type: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"number">, z.ZodLiteral<"boolean">]>>;
            required: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }, {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }>, "many">>>;
        options: z.ZodEffects<z.ZodOptional<z.ZodArray<z.ZodObject<{
            shortFlag: z.ZodOptional<z.ZodString>;
            flag: z.ZodString;
            description: z.ZodString;
            defaultValue: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>>;
            choices: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            required: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
            boolean: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
            type: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"number">, z.ZodLiteral<"boolean">]>>;
        }, "strip", z.ZodTypeAny, {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }, {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }>, "many">>, {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }[] | undefined, unknown>;
        handler: z.ZodEffects<z.ZodFunction<z.ZodTuple<[z.ZodObject<{
            operations: z.ZodRecord<z.ZodString, z.ZodObject<{
                hash: z.ZodString;
                time: z.ZodNumber;
                output: z.ZodUnknown;
            }, "strip", z.ZodTypeAny, {
                output?: unknown;
                hash: string;
                time: number;
            }, {
                output?: unknown;
                hash: string;
                time: number;
            }>>;
            tasks: z.ZodRecord<z.ZodString, z.ZodObject<{
                task: z.ZodType<any, z.ZodTypeDef, any>;
                plugin: z.ZodString;
                time: z.ZodNumber;
                output: z.ZodUnknown;
            }, "strip", z.ZodTypeAny, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }>>;
        }, "strip", z.ZodTypeAny, {
            operations: Record<string, {
                output?: unknown;
                hash: string;
                time: number;
            }>;
            tasks: Record<string, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }>;
        }, {
            operations: Record<string, {
                output?: unknown;
                hash: string;
                time: number;
            }>;
            tasks: Record<string, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }>;
        }>], z.ZodUnknown>, z.ZodFunction<z.ZodTuple<[z.ZodType<any, z.ZodTypeDef, any>], z.ZodUnknown>, z.ZodUnknown>>, (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown, (args_0: {
            operations: Record<string, {
                output?: unknown;
                hash: string;
                time: number;
            }>;
            tasks: Record<string, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }>;
        }, ...args_1: unknown[]) => (args_0: any, ...args_1: unknown[]) => unknown>;
    }, "strip", z.ZodTypeAny, {
        options?: {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }[] | undefined;
        description?: string | undefined;
        positionals?: {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }[] | undefined;
        operation: string;
        command: string;
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }, {
        options?: unknown;
        description?: string | undefined;
        positionals?: {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }[] | undefined;
        operation: string;
        command: string;
        handler: (args_0: {
            operations: Record<string, {
                output?: unknown;
                hash: string;
                time: number;
            }>;
            tasks: Record<string, {
                output?: unknown;
                task?: any;
                plugin: string;
                time: number;
            }>;
        }, ...args_1: unknown[]) => (args_0: any, ...args_1: unknown[]) => unknown;
    }>, "many">, {
        options?: {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }[] | undefined;
        description?: string | undefined;
        positionals?: {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }[] | undefined;
        operation: string;
        command: string;
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }[], unknown>>;
    templates: z.ZodEffects<z.ZodOptional<z.ZodArray<z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    }, any>, {
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    }, any>, "many">>, ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined, unknown>;
    proxy: z.ZodOptional<z.ZodFunction<z.ZodTuple<[z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>], z.ZodUnknown>, z.ZodPromise<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, any, any>>>>;
    checkRuntimeDependencies: z.ZodOptional<z.ZodFunction<z.ZodTuple<[z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>], z.ZodUnknown>, z.ZodPromise<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }, any>>>>;
    installRuntimeDependencies: z.ZodOptional<z.ZodFunction<z.ZodTuple<[z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>, {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, any>], z.ZodUnknown>, z.ZodPromise<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }, any>>>>;
}>, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    operations?: {
        options?: {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }[] | undefined;
        description?: string | undefined;
        positionals?: {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }[] | undefined;
        operation: string;
        command: string;
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    schema: string;
    version: string;
    alias: string;
}, {
    name?: string | undefined;
    operations?: unknown;
    tasks?: unknown;
    proxy?: ((args_0: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        task: string;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, ...args_1: unknown[]) => Promise<any>) | undefined;
    installRuntimeDependencies?: ((args_0: {
        plugin?: string | undefined;
        version?: boolean | undefined;
        build?: boolean | undefined;
        help?: boolean | undefined;
        yes?: boolean | undefined;
        quickstart?: string | undefined;
        pluginName?: string | undefined;
        config: import("@taqueria/protocol/Base").Flatten<{
            language?: "en" | "fr" | undefined;
            contracts?: Record<string, {
                sourceFile: string;
                hash: string & {
                    readonly __kind: any;
                };
            }> | undefined;
            network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                accounts?: Record<string, any> | undefined;
                faucet?: import("@taqueria/protocol/Base").Flatten<{
                    email?: string | undefined;
                    password?: string | undefined;
                    amount?: string | undefined;
                    activation_code?: string | undefined;
                    mnemonic: string[];
                    pkh: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>> | undefined;
            sandbox?: Record<string, {
                accounts?: Record<string, string | ({
                    encryptedKey: string;
                    publicKeyHash: string & {
                        readonly __kind: any;
                    };
                    secretKey: string;
                } & {
                    readonly __kind: any;
                })> | undefined;
                attributes?: Record<string, string | number | boolean> | undefined;
                plugin?: (string & {
                    readonly __kind: any;
                }) | undefined;
                tzkt?: {
                    disableAutostartWithSandbox: boolean;
                    postgresqlPort: number;
                    apiPort: number;
                } | undefined;
                label: string & {
                    readonly __kind: any;
                };
                rpcUrl: string & {
                    readonly __kind: any;
                };
                protocol: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }> | undefined;
            environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                storage?: Record<string, any> | undefined;
                aliases?: Record<string, any> | undefined;
                networks: string[];
                sandboxes: string[];
            } & {
                readonly __kind: any;
            }>> | undefined;
            metadata?: ({
                name?: string | undefined;
                projectDescription?: string | undefined;
                authors?: string[] | undefined;
                license?: string | undefined;
                homepage?: string | undefined;
            } & {
                readonly __kind: any;
            }) | undefined;
            hash: string & {
                readonly __kind: any;
            };
            accounts: Record<string, string | number>;
            plugins: ({
                type: "npm" | "binary" | "deno";
                name: string;
            } & {
                readonly __kind: any;
            })[];
            contractsDir: string;
            artifactsDir: string;
            projectDir: string & {
                readonly __kind: any;
            };
            configFile: string & {
                readonly __kind: any;
            };
        }> & {
            readonly __kind: any;
        };
        debug: boolean;
        fromVsCode: boolean;
        projectDir: string & {
            readonly __kind: any;
        };
        _: (string | number)[];
        maxConcurrency: number;
        disableState: boolean;
        logPluginRequests: boolean;
        env: string;
        setBuild: string;
        setVersion: string;
        taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
    } & {
        readonly __kind: any;
    }, ...args_1: unknown[]) => Promise<any>) | undefined;
    templates?: unknown;
    schema: string;
    version: string;
    alias: string;
}>;
export declare type RawPluginSchema = z.infer<typeof rawSchema>;
export declare const generatedSchemas: {
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
    schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>;
}, factory: {
    make: (input: {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }>;
    of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }>;
    create: (input: {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } | {
        name?: string | undefined;
        operations?: {
            options?: {
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: string | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string;
            }[] | undefined;
            description?: string | undefined;
            positionals?: {
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string;
            }[] | undefined;
            operation: string;
            command: string;
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        schema: string;
        version: string;
        alias: string;
    }) => {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    };
    from: (input: unknown) => {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    };
};
export declare type ParsedPluginInfo = z.infer<typeof generatedSchemas.schema>;
export declare type t = ParsedPluginInfo;
export declare const create: (input: {
    operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }> & {
        readonly __kind: any;
    }>[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    name: string;
    schema: string & {
        readonly __kind: any;
    };
    version: string & {
        readonly __kind: any;
    };
    alias: string & {
        readonly __kind: any;
    };
} | {
    name?: string | undefined;
    operations?: {
        options?: {
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: string | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string;
        }[] | undefined;
        description?: string | undefined;
        positionals?: {
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string;
        }[] | undefined;
        operation: string;
        command: string;
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    schema: string;
    version: string;
    alias: string;
}) => {
    operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }> & {
        readonly __kind: any;
    }>[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    name: string;
    schema: string & {
        readonly __kind: any;
    };
    version: string & {
        readonly __kind: any;
    };
    alias: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}, of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }> & {
        readonly __kind: any;
    }>[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    name: string;
    schema: string & {
        readonly __kind: any;
    };
    version: string & {
        readonly __kind: any;
    };
    alias: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>, make: (input: {
    operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }> & {
        readonly __kind: any;
    }>[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    name: string;
    schema: string & {
        readonly __kind: any;
    };
    version: string & {
        readonly __kind: any;
    };
    alias: string & {
        readonly __kind: any;
    };
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        description?: string | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        operation: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: (state: {
            operations: Record<string, {
                output?: unknown;
                hash: string & {
                    readonly __kind: any;
                };
                time: number & {
                    readonly __kind: any;
                };
            }>;
            tasks: Record<string, {
                output?: unknown;
                plugin: string;
                time: number & {
                    readonly __kind: any;
                };
                task: string & {
                    readonly __kind: any;
                };
            }>;
        } & {
            readonly __kind: any;
        }) => <T extends {
            plugin?: string | undefined;
            version?: boolean | undefined;
            build?: boolean | undefined;
            help?: boolean | undefined;
            yes?: boolean | undefined;
            quickstart?: string | undefined;
            pluginName?: string | undefined;
            config: import("@taqueria/protocol/Base").Flatten<{
                language?: "en" | "fr" | undefined;
                contracts?: Record<string, {
                    sourceFile: string;
                    hash: string & {
                        readonly __kind: any;
                    };
                }> | undefined;
                network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                    accounts?: Record<string, any> | undefined;
                    faucet?: import("@taqueria/protocol/Base").Flatten<{
                        email?: string | undefined;
                        password?: string | undefined;
                        amount?: string | undefined;
                        activation_code?: string | undefined;
                        mnemonic: string[];
                        pkh: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }>> | undefined;
                sandbox?: Record<string, {
                    accounts?: Record<string, string | ({
                        encryptedKey: string;
                        publicKeyHash: string & {
                            readonly __kind: any;
                        };
                        secretKey: string;
                    } & {
                        readonly __kind: any;
                    })> | undefined;
                    attributes?: Record<string, string | number | boolean> | undefined;
                    plugin?: (string & {
                        readonly __kind: any;
                    }) | undefined;
                    tzkt?: {
                        disableAutostartWithSandbox: boolean;
                        postgresqlPort: number;
                        apiPort: number;
                    } | undefined;
                    label: string & {
                        readonly __kind: any;
                    };
                    rpcUrl: string & {
                        readonly __kind: any;
                    };
                    protocol: string & {
                        readonly __kind: any;
                    };
                } & {
                    readonly __kind: any;
                }> | undefined;
                environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                    storage?: Record<string, any> | undefined;
                    aliases?: Record<string, any> | undefined;
                    networks: string[];
                    sandboxes: string[];
                } & {
                    readonly __kind: any;
                }>> | undefined;
                metadata?: ({
                    name?: string | undefined;
                    projectDescription?: string | undefined;
                    authors?: string[] | undefined;
                    license?: string | undefined;
                    homepage?: string | undefined;
                } & {
                    readonly __kind: any;
                }) | undefined;
                hash: string & {
                    readonly __kind: any;
                };
                accounts: Record<string, string | number>;
                plugins: ({
                    type: "npm" | "binary" | "deno";
                    name: string;
                } & {
                    readonly __kind: any;
                })[];
                contractsDir: string;
                artifactsDir: string;
                projectDir: string & {
                    readonly __kind: any;
                };
                configFile: string & {
                    readonly __kind: any;
                };
            }> & {
                readonly __kind: any;
            };
            debug: boolean;
            fromVsCode: boolean;
            projectDir: string & {
                readonly __kind: any;
            };
            _: (string | number)[];
            maxConcurrency: number;
            disableState: boolean;
            logPluginRequests: boolean;
            env: string;
            setBuild: string;
            setVersion: string;
            taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
        } & {
            readonly __kind: any;
        }>(opts: T) => unknown;
    }> & {
        readonly __kind: any;
    }>[] | undefined;
    tasks?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        aliases?: (string & {
            readonly __kind: any;
        })[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        example?: string | undefined;
        description: string;
        task: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string;
    } & {
        readonly __kind: any;
    })[] | undefined;
    proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
    checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
        path: string;
        name: string;
        version: string;
        kind: "required" | "optional";
    } & {
        readonly __kind: any;
    }>) | undefined;
    templates?: ({
        options?: import("@taqueria/protocol/Base").Flatten<{
            boolean?: boolean | undefined;
            type?: "string" | "number" | "boolean" | undefined;
            shortFlag?: (string & {
                readonly __kind: any;
            }) | undefined;
            defaultValue?: string | number | boolean | undefined;
            choices?: string[] | undefined;
            required?: boolean | undefined;
            description: string;
            flag: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        }>[] | undefined;
        positionals?: ({
            type?: "string" | "number" | "boolean" | undefined;
            defaultValue?: string | number | boolean | undefined;
            required?: boolean | undefined;
            description: string;
            placeholder: string & {
                readonly __kind: any;
            };
        } & {
            readonly __kind: any;
        })[] | undefined;
        hidden?: boolean | undefined;
        encoding?: (("none" | "json" | "application/json" | undefined) & {
            readonly __kind: any;
        }) | undefined;
        description: string;
        template: string & {
            readonly __kind: any;
        };
        command: string & {
            readonly __kind: any;
        };
        handler: string | ((args_0: any, ...args_1: unknown[]) => any);
    } & {
        readonly __kind: any;
    })[] | undefined;
    name: string;
    schema: string & {
        readonly __kind: any;
    };
    version: string & {
        readonly __kind: any;
    };
    alias: string & {
        readonly __kind: any;
    };
} & {
    readonly __kind: any;
}>;
export declare const schemas: {
    schema: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>, {
        operations?: import("@taqueria/protocol/Base").Flatten<import("@taqueria/protocol/Base").Flatten<{
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            description?: string | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            operation: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: (state: {
                operations: Record<string, {
                    output?: unknown;
                    hash: string & {
                        readonly __kind: any;
                    };
                    time: number & {
                        readonly __kind: any;
                    };
                }>;
                tasks: Record<string, {
                    output?: unknown;
                    plugin: string;
                    time: number & {
                        readonly __kind: any;
                    };
                    task: string & {
                        readonly __kind: any;
                    };
                }>;
            } & {
                readonly __kind: any;
            }) => <T extends {
                plugin?: string | undefined;
                version?: boolean | undefined;
                build?: boolean | undefined;
                help?: boolean | undefined;
                yes?: boolean | undefined;
                quickstart?: string | undefined;
                pluginName?: string | undefined;
                config: import("@taqueria/protocol/Base").Flatten<{
                    language?: "en" | "fr" | undefined;
                    contracts?: Record<string, {
                        sourceFile: string;
                        hash: string & {
                            readonly __kind: any;
                        };
                    }> | undefined;
                    network?: Record<string, import("@taqueria/protocol/Base").Flatten<{
                        accounts?: Record<string, any> | undefined;
                        faucet?: import("@taqueria/protocol/Base").Flatten<{
                            email?: string | undefined;
                            password?: string | undefined;
                            amount?: string | undefined;
                            activation_code?: string | undefined;
                            mnemonic: string[];
                            pkh: string & {
                                readonly __kind: any;
                            };
                        } & {
                            readonly __kind: any;
                        }> | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    sandbox?: Record<string, {
                        accounts?: Record<string, string | ({
                            encryptedKey: string;
                            publicKeyHash: string & {
                                readonly __kind: any;
                            };
                            secretKey: string;
                        } & {
                            readonly __kind: any;
                        })> | undefined;
                        attributes?: Record<string, string | number | boolean> | undefined;
                        plugin?: (string & {
                            readonly __kind: any;
                        }) | undefined;
                        tzkt?: {
                            disableAutostartWithSandbox: boolean;
                            postgresqlPort: number;
                            apiPort: number;
                        } | undefined;
                        label: string & {
                            readonly __kind: any;
                        };
                        rpcUrl: string & {
                            readonly __kind: any;
                        };
                        protocol: string & {
                            readonly __kind: any;
                        };
                    } & {
                        readonly __kind: any;
                    }> | undefined;
                    environment?: Record<string, string | import("@taqueria/protocol/Base").Flatten<{
                        storage?: Record<string, any> | undefined;
                        aliases?: Record<string, any> | undefined;
                        networks: string[];
                        sandboxes: string[];
                    } & {
                        readonly __kind: any;
                    }>> | undefined;
                    metadata?: ({
                        name?: string | undefined;
                        projectDescription?: string | undefined;
                        authors?: string[] | undefined;
                        license?: string | undefined;
                        homepage?: string | undefined;
                    } & {
                        readonly __kind: any;
                    }) | undefined;
                    hash: string & {
                        readonly __kind: any;
                    };
                    accounts: Record<string, string | number>;
                    plugins: ({
                        type: "npm" | "binary" | "deno";
                        name: string;
                    } & {
                        readonly __kind: any;
                    })[];
                    contractsDir: string;
                    artifactsDir: string;
                    projectDir: string & {
                        readonly __kind: any;
                    };
                    configFile: string & {
                        readonly __kind: any;
                    };
                }> & {
                    readonly __kind: any;
                };
                debug: boolean;
                fromVsCode: boolean;
                projectDir: string & {
                    readonly __kind: any;
                };
                _: (string | number)[];
                maxConcurrency: number;
                disableState: boolean;
                logPluginRequests: boolean;
                env: string;
                setBuild: string;
                setVersion: string;
                taqRun: "pluginInfo" | "proxy" | "checkRuntimeDependencies" | "installRuntimeDependencies" | "proxyTemplate";
            } & {
                readonly __kind: any;
            }>(opts: T) => unknown;
        }> & {
            readonly __kind: any;
        }>[] | undefined;
        tasks?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            aliases?: (string & {
                readonly __kind: any;
            })[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            example?: string | undefined;
            description: string;
            task: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string;
        } & {
            readonly __kind: any;
        })[] | undefined;
        proxy?: ((args_0: any, ...args_1: unknown[]) => Promise<any>) | undefined;
        checkRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        installRuntimeDependencies?: ((args_0: any, ...args_1: unknown[]) => Promise<{
            path: string;
            name: string;
            version: string;
            kind: "required" | "optional";
        } & {
            readonly __kind: any;
        }>) | undefined;
        templates?: ({
            options?: import("@taqueria/protocol/Base").Flatten<{
                boolean?: boolean | undefined;
                type?: "string" | "number" | "boolean" | undefined;
                shortFlag?: (string & {
                    readonly __kind: any;
                }) | undefined;
                defaultValue?: string | number | boolean | undefined;
                choices?: string[] | undefined;
                required?: boolean | undefined;
                description: string;
                flag: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            }>[] | undefined;
            positionals?: ({
                type?: "string" | "number" | "boolean" | undefined;
                defaultValue?: string | number | boolean | undefined;
                required?: boolean | undefined;
                description: string;
                placeholder: string & {
                    readonly __kind: any;
                };
            } & {
                readonly __kind: any;
            })[] | undefined;
            hidden?: boolean | undefined;
            encoding?: (("none" | "json" | "application/json" | undefined) & {
                readonly __kind: any;
            }) | undefined;
            description: string;
            template: string & {
                readonly __kind: any;
            };
            command: string & {
                readonly __kind: any;
            };
            handler: string | ((args_0: any, ...args_1: unknown[]) => any);
        } & {
            readonly __kind: any;
        })[] | undefined;
        name: string;
        schema: string & {
            readonly __kind: any;
        };
        version: string & {
            readonly __kind: any;
        };
        alias: string & {
            readonly __kind: any;
        };
    } & {
        readonly __kind: any;
    }, any>;
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
};
//# sourceMappingURL=PluginSchema.d.ts.map