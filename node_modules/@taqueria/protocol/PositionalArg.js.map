{"version":3,"sources":["PositionalArg.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport * as HumanReadableIdentifier from '@taqueria/protocol/HumanReadableIdentifier';\nimport { z } from 'zod';\n\nexport const rawSchema = z.object({\n\tplaceholder: HumanReadableIdentifier.rawSchema.describe('Positional Arg Placeholder'),\n\tdescription: z.string({ description: 'Positional Arg Description' }).min(1),\n\tdefaultValue: z.union(\n\t\t[z.string(), z.number(), z.boolean()],\n\t\t{ description: 'Positional Arg Default Value' },\n\t).optional(),\n\ttype: z.union(\n\t\t[z.literal('string'), z.literal('number'), z.literal('boolean')],\n\t\t{ description: 'Positional Arg Datatype' },\n\t).optional(),\n\trequired: z.boolean().optional(),\n}).describe('Positional Arg');\n\nconst internalSchema = rawSchema.extend({\n\tplaceholder: HumanReadableIdentifier.schemas.schema.describe('Positional Arg Placeholder'),\n}).describe('Positional Arg');\n\ntype RawInput = z.infer<typeof rawSchema>;\ntype Input = z.infer<typeof internalSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, Input>({\n\trawSchema,\n\tinternalSchema,\n\tparseErrMsg: (value: unknown) => `The following positional argument is invalid: ${value}`,\n\tunknownErrMsg: 'Something went wrong parsing the positional argument',\n});\n\nexport type PositionalArg = z.infer<typeof generatedSchemas.schema>;\nexport type t = PositionalArg;\n\nexport const { create, of, make } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as unknown as PositionalArg),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAAA;AAAA,EAAA,eAAAC;AAAA;AAAA;AAAA,kBAAuB;AACvB,8BAAyC;AACzC,iBAAkB;AAEX,IAAMD,aAAY,aAAE,OAAO;AAAA,EACjC,aAAqC,kCAAU,SAAS,4BAA4B;AAAA,EACpF,aAAa,aAAE,OAAO,EAAE,aAAa,6BAA6B,CAAC,EAAE,IAAI,CAAC;AAAA,EAC1E,cAAc,aAAE;AAAA,IACf,CAAC,aAAE,OAAO,GAAG,aAAE,OAAO,GAAG,aAAE,QAAQ,CAAC;AAAA,IACpC,EAAE,aAAa,+BAA+B;AAAA,EAC/C,EAAE,SAAS;AAAA,EACX,MAAM,aAAE;AAAA,IACP,CAAC,aAAE,QAAQ,QAAQ,GAAG,aAAE,QAAQ,QAAQ,GAAG,aAAE,QAAQ,SAAS,CAAC;AAAA,IAC/D,EAAE,aAAa,0BAA0B;AAAA,EAC1C,EAAE,SAAS;AAAA,EACX,UAAU,aAAE,QAAQ,EAAE,SAAS;AAChC,CAAC,EAAE,SAAS,gBAAgB;AAE5B,IAAM,iBAAiBA,WAAU,OAAO;AAAA,EACvC,aAAqC,gCAAQ,OAAO,SAAS,4BAA4B;AAC1F,CAAC,EAAE,SAAS,gBAAgB;AAKrB,IAAM,EAAE,SAAS,kBAAkB,QAAQ,QAAI,YAAAE,SAA4B;AAAA,EACjF,WAAAF;AAAA,EACA;AAAA,EACA,aAAa,CAAC,UAAmB,iDAAiD;AAAA,EAClF,eAAe;AAChB,CAAC;AAKM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAE7B,IAAMC,WAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAA+B;AACjF;","names":["rawSchema","schemas","createType"]}