{"version":3,"sources":["PluginResponseEncoding.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport { z } from 'zod';\n\nexport const rawSchema = z.preprocess(\n\t(val: unknown) => val ?? 'none',\n\tz.union([\n\t\tz.literal('json'),\n\t\tz.literal('application/json'),\n\t\tz.literal('none'),\n\t])\n\t\t.default('none')\n\t\t.optional(),\n);\n\ntype RawInput = z.infer<typeof rawSchema>;\n\nexport const { schemas, factory } = createType<RawInput, RawInput>({\n\trawSchema,\n\tinternalSchema: rawSchema,\n\tparseErrMsg: (value: unknown) => `The following encoding is invalid: ${value}`,\n\tunknownErrMsg: 'Something went wrong trying to parse the encoding',\n});\n\nexport type PluginResponseEncoding = z.infer<typeof schemas.schema>;\nexport type t = PluginResponseEncoding;\n\nexport const { create, of, make } = factory;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB;AACvB,iBAAkB;AAEX,IAAM,YAAY,aAAE;AAAA,EAC1B,CAAC,QAAiB,OAAO;AAAA,EACzB,aAAE,MAAM;AAAA,IACP,aAAE,QAAQ,MAAM;AAAA,IAChB,aAAE,QAAQ,kBAAkB;AAAA,IAC5B,aAAE,QAAQ,MAAM;AAAA,EACjB,CAAC,EACC,QAAQ,MAAM,EACd,SAAS;AACZ;AAIO,IAAM,EAAE,SAAS,QAAQ,QAAI,YAAAA,SAA+B;AAAA,EAClE;AAAA,EACA,gBAAgB;AAAA,EAChB,aAAa,CAAC,UAAmB,sCAAsC;AAAA,EACvE,eAAe;AAChB,CAAC;AAKM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;","names":["createType"]}