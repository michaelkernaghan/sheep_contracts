{"version":3,"sources":["SandboxAccountConfig.ts"],"sourcesContent":["import createType from '@taqueria/protocol/Base';\nimport * as PublicKeyHash from '@taqueria/protocol/PublicKeyHash';\nimport { z } from 'zod';\n\nconst internalSchema = z.object({\n\tencryptedKey: z.string({ description: 'Sandbox Account Encrypted Key' }).min(1),\n\tpublicKeyHash: PublicKeyHash.schemas.schema.describe('Sandbox Account Public Key Hash'),\n\tsecretKey: z.string({ description: 'Sandbox Account Secret Key' }).min(1),\n}, { description: 'Sandbox Account Configuration' });\n\nexport const rawSchema = z.object({\n\tencryptedKey: z.string({ description: 'Sandbox Account Encrypted Key' }).min(1),\n\tpublicKeyHash: z.string({ description: 'Sandbox Account Public Key Hash' }).min(1),\n\tsecretKey: z.string({ description: 'Sandbox Account Secret Key' }).min(1),\n}, { description: 'Sandbox Account Configuration' });\n\ntype Input = z.infer<typeof internalSchema>;\n\ntype RawInput = z.infer<typeof rawSchema>;\n\nexport const { schemas: generatedSchemas, factory } = createType<RawInput, Input>({\n\trawSchema,\n\tinternalSchema,\n\tparseErrMsg: 'The sandbox account configuration is invalid',\n\tunknownErrMsg: 'Something went wrong trying to parse the sandbox account configuration',\n});\n\nexport type SandboxAccountConfig = z.infer<typeof generatedSchemas.schema>;\nexport type t = SandboxAccountConfig;\nexport const { create, of, make } = factory;\n\nexport const schemas = {\n\t...generatedSchemas,\n\tschema: generatedSchemas.schema.transform(val => val as SandboxAccountConfig),\n};\n"],"mappings":";AAAA,OAAO,gBAAgB;AACvB,YAAY,mBAAmB;AAC/B,SAAS,SAAS;AAElB,IAAM,iBAAiB,EAAE,OAAO;AAAA,EAC/B,cAAc,EAAE,OAAO,EAAE,aAAa,gCAAgC,CAAC,EAAE,IAAI,CAAC;AAAA,EAC9E,eAA6B,sBAAQ,OAAO,SAAS,iCAAiC;AAAA,EACtF,WAAW,EAAE,OAAO,EAAE,aAAa,6BAA6B,CAAC,EAAE,IAAI,CAAC;AACzE,GAAG,EAAE,aAAa,gCAAgC,CAAC;AAE5C,IAAM,YAAY,EAAE,OAAO;AAAA,EACjC,cAAc,EAAE,OAAO,EAAE,aAAa,gCAAgC,CAAC,EAAE,IAAI,CAAC;AAAA,EAC9E,eAAe,EAAE,OAAO,EAAE,aAAa,kCAAkC,CAAC,EAAE,IAAI,CAAC;AAAA,EACjF,WAAW,EAAE,OAAO,EAAE,aAAa,6BAA6B,CAAC,EAAE,IAAI,CAAC;AACzE,GAAG,EAAE,aAAa,gCAAgC,CAAC;AAM5C,IAAM,EAAE,SAAS,kBAAkB,QAAQ,IAAI,WAA4B;AAAA,EACjF;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb,eAAe;AAChB,CAAC;AAIM,IAAM,EAAE,QAAQ,IAAI,KAAK,IAAI;AAE7B,IAAMA,WAAU;AAAA,EACtB,GAAG;AAAA,EACH,QAAQ,iBAAiB,OAAO,UAAU,SAAO,GAA2B;AAC7E;","names":["schemas"]}